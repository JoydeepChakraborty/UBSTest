package com.ubs.opsit.interviews;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;

import com.ubs.opsit.exception.InvalidTimeException;
import com.ubs.opsit.time.Hours;
import com.ubs.opsit.time.Minutes;
import com.ubs.opsit.time.Seconds;

public class BerlinClock implements TimeConverter {

	private Hours hours;
	private Minutes minutes;
	private Seconds seconds;
	
	@Override
	public void convertTime(String inputTime) throws InvalidTimeException {
		TimeConverter timeConverter = new BerlinClock();
  
		if(validateTime(inputTime)){
			
			seconds=new Seconds();
			seconds.calculatedString(Integer.parseInt(inputTime.split(":")[2]));
			
			hours=new Hours();
			hours.calculatedString(Integer.parseInt(inputTime.split(":")[0]));
			
			minutes=new Minutes();
			minutes.calculatedString(Integer.parseInt(inputTime.split(":")[1]));
			
		}
		else
			throw new InvalidTimeException("Enter proper time , in given format");

	}

	//TO VALIDATE INPUT STRING
	private boolean validateTime(String inputTime) {
		if ((Integer.parseInt(inputTime.split(":")[0]) >= 1 && Integer.parseInt(inputTime.split(":")[0]) <= 24)
				&& (Integer.parseInt(inputTime.split(":")[1]) >= 0 && Integer.parseInt(inputTime.split(":")[1]) <= 59)
				&&(Integer.parseInt(inputTime.split(":")[2]) >= 0 && Integer.parseInt(inputTime.split(":")[2]) <= 59))
			return true;

		return false;
	}


}
